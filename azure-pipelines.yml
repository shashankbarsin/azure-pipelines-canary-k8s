trigger:
- master

variables:
  imageName: shashankbarsin/azure-pipelines-canary-k8s
  vmImage: ubuntu-latest
  skipComponentGovernanceDetection: true

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImage)
    steps:
    - task: Docker@2
      displayName: Login
      inputs:
        command: login
        containerRegistry: shasbDockerHub
    - task: Docker@2
      displayName: Build and push image
      inputs:
        containerRegistry: shasbDockerHub
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: app/Dockerfile
        tags: |
          $(Build.BuildId)
- stage: Deployment
  displayName: Deployment
  dependsOn: Build
  jobs:
  - deployment: Deployment
    displayName: Deployment
    pool:
      vmImage: $(vmImage)
    environment: shasb.allhands
    strategy:
      canary:
        increments: [25, 50]
        deploy:
          steps:
          - checkout: self
          - task: KubernetesManifest@0
            displayName: Deploy canary
            inputs:
              action: $(strategy.action)
              namespace: allhands
              strategy: $(strategy.name)
              percentage: $(strategy.increment)
              manifests: |
                manifests/deployment.yml
                manifests/service.yml
              containers: 'shashankbarsin/azure-pipelines-canary-k8s:$(Build.BuildId)'
          postRouteTraffic:
            pool: server
            steps:
            - task: AutomatedAnalysis@1
              inputs:
                connectedServiceNameARM: 'RMPM'
                ResourceGroupName: 'shasb'
                provider: 'Prometheus'
                endpointUrl: 'http://52.152.99.157:9090/'
                expressionTemplates: 'sum(rate(requests_total{custom_status="good", $label=~"$value" }[1m]))'
                templateSubstitutions: 'pod sampleapp-baseline-.* sampleapp-canary-.*'
                analysisType: 'realtime'
                windowType: 'sliding'
                lifetime: '3m'
                interval: '1m'
                preprocessor: 'ksigma'
                classifier: 'mannWhitney'
                direction: 'DECREASE'
        on:
          failure:
            steps:            
            - script: echo deployment failed...
            - task: KubernetesManifest@0
              inputs:
                action: reject
                namespace: allhands
                strategy: $(strategy.name)
                manifests: |
                  manifests/deployment.yml
                  manifests/service.yml
          success:
            steps:
            - script: echo 'Successfully deployed'
